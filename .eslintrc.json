{
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "parser": "babel-eslint",
  "plugins": [
    "react",
    "prettier"
  ],
  "parserOptions": {
    "version": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "extends": [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "prettier/react",
    "plugin:react/recommended"
  ],
  "globals": {
    "axios": true
    },
  "rules": {
    "prettier/prettier": "error",
    "react/jsx-uses-react": 0,
    "react/jsx-uses-vars": 0,
    "react/jsx-fragments": ["off", "element"],
    "react/react-in-jsx-scope": "off",
    "no-unused-vars": "off",
    "no-undef": "warn",
    "react/no-unescaped-entities": ["error", {"forbid": []}],
    "react/prop-types": ["off",{}],
    "react/jsx-filename-extension": [
        1,
        {
            "extensions": [
                ".js",
                ".jsx"
            ]
        }
    ],

    "react/jsx-key": ["off",
        {
            "checkFragmentShorthand": false
        }]
    },
    "settings": {
        "react": {
            "createClass": "createReactClass", // Regex for Component Factory to use,
            // default to "createReactClass"
            "pragma": "React", // Pragma to use, default to "React"
            "fragment": "React.Fragment", // Fragment to use, default to "React.Fragment"
            "version": "detect", // React version. "detect" automatically picks the version you have installed.
            // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
            // default to latest and warns if missing
            // It will default to "detect" in the future
            "flowVersion": "0.53" // Flow version
        },
        "propWrapperFunctions": [
            // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
            "forbidExtraProps",
            {
                "property": "freeze",
                "object": "Object"
            },
            {
                "property": "myFavoriteWrapper"
            }
        ],
        "linkComponents": [
            // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
            "Hyperlink",
            {
                "name": "Link",
                "linkAttribute": "to"
            }
        ]
    }
}
